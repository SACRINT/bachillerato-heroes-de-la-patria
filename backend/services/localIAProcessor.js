/**
 * ü§ñ LOCAL IA PROCESSOR - PROCESADOR DE IA LOCAL
 * Sistema de IA local como fallback independiente para BGE H√©roes de la Patria
 * Funciona sin APIs externas, usando algoritmos de procesamiento de lenguaje natural
 *
 * Versi√≥n: 3.0 - Fase 3 IA Avanzada
 * Fecha: 26 Septiembre 2025
 */

class LocalIAProcessor {
    constructor() {
        this.knowledgeBase = new Map();
        this.responseTemplates = new Map();
        this.contextPatterns = new Map();
        this.intentClassifier = new Map();

        this.init();
    }

    init() {
        console.log('üß† Inicializando LocalIAProcessor...');

        this.loadKnowledgeBase();
        this.setupResponseTemplates();
        this.setupIntentClassifier();
        this.setupContextPatterns();

        console.log('‚úÖ LocalIAProcessor inicializado correctamente');
    }

    /**
     * CARGAR BASE DE CONOCIMIENTO LOCAL
     */
    loadKnowledgeBase() {
        // Base de conocimiento educativo espec√≠fico de BGE
        this.knowledgeBase.set('admision', {
            keywords: ['admision', 'inscripcion', 'ingresar', 'inscribir', 'requisitos', 'registro'],
            responses: [
                'Para inscribirte al Bachillerato General Estatal "H√©roes de la Patria", necesitas presentar tu certificado de secundaria, acta de nacimiento, CURP, y fotograf√≠as tama√±o infantil.',
                'El proceso de admisi√≥n incluye una evaluaci√≥n diagn√≥stica y entrega de documentos. Las inscripciones est√°n abiertas durante febrero y marzo.',
                'Los requisitos de admisi√≥n incluyen haber concluido la educaci√≥n secundaria y aprobar el examen de ingreso.'
            ],
            context: 'informacion_institucional'
        });

        this.knowledgeBase.set('plan_estudios', {
            keywords: ['plan', 'estudios', 'materias', 'asignaturas', 'curriculum', 'semestres'],
            responses: [
                'Nuestro plan de estudios incluye materias b√°sicas como Matem√°ticas, Espa√±ol, Ciencias Naturales, Ciencias Sociales, y materias optativas especializadas.',
                'El bachillerato se cursa en 6 semestres (3 a√±os) con un enfoque en formaci√≥n integral y preparaci√≥n universitaria.',
                'Ofrecemos especialidades en Ciencias F√≠sico-Matem√°ticas, Qu√≠mico-Biol√≥gicas, y Econ√≥mico-Administrativas.'
            ],
            context: 'informacion_academica'
        });

        this.knowledgeBase.set('horarios', {
            keywords: ['horarios', 'clases', 'turnos', 'horario', 'hora', 'tiempo'],
            responses: [
                'Tenemos turno matutino de 7:00 AM a 1:30 PM y turno vespertino de 2:00 PM a 8:30 PM.',
                'Las clases son de lunes a viernes. Los horarios se publican al inicio de cada semestre.',
                'Cada clase tiene duraci√≥n de 50 minutos con 10 minutos de receso entre per√≠odos.'
            ],
            context: 'logistica'
        });

        this.knowledgeBase.set('servicios', {
            keywords: ['servicios', 'biblioteca', 'laboratorio', 'deportes', 'cafeteria', 'transporte'],
            responses: [
                'Contamos con biblioteca, laboratorios de ciencias, sala de c√≥mputo, canchas deportivas, y cafeter√≠a escolar.',
                'Ofrecemos servicios de orientaci√≥n vocacional, apoyo psicopedag√≥gico, y actividades extracurriculares.',
                'Tenemos convenios de transporte escolar y becas acad√©micas para estudiantes destacados.'
            ],
            context: 'servicios_escolares'
        });

        this.knowledgeBase.set('contacto', {
            keywords: ['contacto', 'telefono', 'direccion', 'ubicacion', 'email', 'correo'],
            responses: [
                'Nos ubicamos en Puebla, M√©xico. Puedes contactarnos a trav√©s de nuestra p√°gina web o visitarnos directamente.',
                'Para m√°s informaci√≥n, puedes comunicarte con nosotros o agendar una cita con el departamento de admisiones.',
                'Estamos disponibles de lunes a viernes en horario de oficina para resolver tus dudas.'
            ],
            context: 'contacto_institucional'
        });

        // Temas acad√©micos espec√≠ficos
        this.knowledgeBase.set('matematicas', {
            keywords: ['matematicas', 'algebra', 'geometria', 'calculo', 'trigonometria', 'ecuaciones'],
            responses: [
                'En matem√°ticas trabajamos desde √°lgebra b√°sica hasta c√°lculo diferencial, prepar√°ndote para estudios universitarios.',
                'Las matem√°ticas son fundamentales en nuestro plan de estudios, con enfoque en resoluci√≥n de problemas y pensamiento l√≥gico.',
                'Ofrecemos asesor√≠as adicionales en matem√°ticas para estudiantes que necesiten refuerzo acad√©mico.'
            ],
            context: 'materia_academica'
        });

        this.knowledgeBase.set('ciencias', {
            keywords: ['ciencias', 'fisica', 'quimica', 'biologia', 'laboratorio', 'experimentos'],
            responses: [
                'Nuestros laboratorios de ciencias est√°n equipados para experimentos de f√≠sica, qu√≠mica y biolog√≠a.',
                'Las ciencias naturales incluyen pr√°cticas de laboratorio y proyectos de investigaci√≥n estudiantil.',
                'Fomentamos el m√©todo cient√≠fico y la experimentaci√≥n como base del aprendizaje en ciencias.'
            ],
            context: 'materia_academica'
        });

        this.knowledgeBase.set('orientacion_vocacional', {
            keywords: ['carrera', 'universidad', 'futuro', 'orientacion', 'vocacional', 'profesion'],
            responses: [
                'Nuestro departamento de orientaci√≥n vocacional te ayuda a descubrir tus intereses y aptitudes profesionales.',
                'Organizamos ferias universitarias y pl√°ticas con profesionistas para orientar tu elecci√≥n de carrera.',
                'Ofrecemos test vocacionales y asesor√≠a personalizada para tu proyecto de vida universitario.'
            ],
            context: 'orientacion_estudiantil'
        });

        console.log(`üìö Base de conocimiento cargada: ${this.knowledgeBase.size} temas`);
    }

    /**
     * CONFIGURAR PLANTILLAS DE RESPUESTA
     */
    setupResponseTemplates() {
        this.responseTemplates.set('saludo', [
            '¬°Hola! Soy el asistente virtual del Bachillerato General Estatal "H√©roes de la Patria". ¬øEn qu√© puedo ayudarte?',
            '¬°Buenos d√≠as! Estoy aqu√≠ para ayudarte con informaci√≥n sobre nuestra instituci√≥n. ¬øQu√© te gustar√≠a saber?',
            '¬°Hola! ¬øTienes alguna pregunta sobre el bachillerato o nuestros servicios educativos?'
        ]);

        this.responseTemplates.set('despedida', [
            '¬°Gracias por contactarnos! Esperamos verte pronto en H√©roes de la Patria. ¬°Que tengas un excelente d√≠a!',
            'Ha sido un placer ayudarte. Si tienes m√°s preguntas, no dudes en contactarnos. ¬°Hasta pronto!',
            '¬°Excelente! Espero haber resuelto tus dudas. Te esperamos en H√©roes de la Patria.'
        ]);

        this.responseTemplates.set('no_entendido', [
            'Disculpa, no estoy seguro de entender tu pregunta. ¬øPodr√≠as reformularla?',
            'Lo siento, esa informaci√≥n no est√° en mi base de datos. ¬øTe puedo ayudar con algo m√°s sobre el bachillerato?',
            'No tengo informaci√≥n espec√≠fica sobre eso, pero puedo ayudarte con admisiones, plan de estudios, horarios o servicios.'
        ]);

        this.responseTemplates.set('ayuda_general', [
            'Puedo ayudarte con informaci√≥n sobre:\n‚Ä¢ Proceso de admisi√≥n\n‚Ä¢ Plan de estudios\n‚Ä¢ Horarios y turnos\n‚Ä¢ Servicios escolares\n‚Ä¢ Orientaci√≥n vocacional\n\n¬øQu√© te interesa saber?',
            'Estoy aqu√≠ para ayudarte con cualquier duda sobre H√©roes de la Patria. Preg√∫ntame sobre admisiones, materias, horarios o servicios.',
            'Mi especialidad es brindarte informaci√≥n educativa sobre nuestro bachillerato. ¬øEn qu√© √°rea espec√≠fica te puedo ayudar?'
        ]);

        console.log(`üìù Plantillas de respuesta configuradas: ${this.responseTemplates.size} tipos`);
    }

    /**
     * CONFIGURAR CLASIFICADOR DE INTENCIONES
     */
    setupIntentClassifier() {
        this.intentClassifier.set('saludo', {
            patterns: [
                /^(hola|hi|hello|buenas|buenos|buen)/i,
                /^(que tal|como estas|saludos)/i
            ],
            confidence: 0.9
        });

        this.intentClassifier.set('despedida', {
            patterns: [
                /^(adios|hasta luego|bye|nos vemos|gracias|chau)/i,
                /^(me voy|ya me voy|hasta pronto)/i
            ],
            confidence: 0.9
        });

        this.intentClassifier.set('pregunta_informacion', {
            patterns: [
                /^(que|cual|como|cuando|donde|por que|cuanto)/i,
                /^(me puedes|puedes|podrias|necesito|quiero saber)/i,
                /^(info|informacion|detalles|datos)/i
            ],
            confidence: 0.8
        });

        this.intentClassifier.set('ayuda', {
            patterns: [
                /^(ayuda|help|socorro|no entiendo)/i,
                /^(que puedes hacer|como funciona)/i
            ],
            confidence: 0.8
        });

        console.log(`üéØ Clasificador de intenciones configurado: ${this.intentClassifier.size} intenciones`);
    }

    /**
     * CONFIGURAR PATRONES DE CONTEXTO
     */
    setupContextPatterns() {
        this.contextPatterns.set('temporal_urgente', {
            keywords: ['urgente', 'rapido', 'inmediato', 'ya', 'ahora'],
            modifier: 'urgencia'
        });

        this.contextPatterns.set('temporal_futuro', {
            keywords: ['proximamente', 'siguiente', 'futuro', 'despues', 'luego'],
            modifier: 'planificacion'
        });

        this.contextPatterns.set('emocional_positivo', {
            keywords: ['gracias', 'excelente', 'perfecto', 'genial', 'increible'],
            modifier: 'satisfaccion'
        });

        this.contextPatterns.set('emocional_negativo', {
            keywords: ['problema', 'dificil', 'no puedo', 'complicado', 'mal'],
            modifier: 'preocupacion'
        });

        console.log(`üé≠ Patrones de contexto configurados: ${this.contextPatterns.size} patrones`);
    }

    /**
     * PROCESAR MENSAJE PRINCIPAL
     */
    async process(params) {
        const startTime = Date.now();
        const { message, context, conversationHistory, systemPrompt } = params;

        try {
            // 1. An√°lisis de intenci√≥n
            const intent = this.classifyIntent(message);

            // 2. An√°lisis de contexto
            const contextAnalysis = this.analyzeContext(message, context);

            // 3. B√∫squeda en base de conocimiento
            const knowledgeMatch = this.searchKnowledgeBase(message);

            // 4. Generar respuesta
            const response = this.generateResponse(intent, knowledgeMatch, contextAnalysis, message);

            // 5. An√°lisis de confianza
            const confidence = this.calculateConfidence(intent, knowledgeMatch, contextAnalysis);

            const processingTime = Date.now() - startTime;

            console.log(`üß† LocalIA proces√≥: "${message.substring(0, 30)}..." en ${processingTime}ms (confianza: ${(confidence * 100).toFixed(1)}%)`);

            return {
                text: response,
                confidence: confidence,
                intent: intent.name,
                processingTime: processingTime,
                contextModifiers: contextAnalysis.modifiers,
                knowledgeSource: knowledgeMatch?.source || 'template',
                isLocal: true
            };

        } catch (error) {
            console.error('Error en LocalIAProcessor:', error);
            return this.generateErrorResponse(message);
        }
    }

    /**
     * CLASIFICAR INTENCI√ìN DEL MENSAJE
     */
    classifyIntent(message) {
        const normalizedMessage = message.toLowerCase().trim();
        let bestMatch = { name: 'pregunta_informacion', confidence: 0.5 };

        for (const [intentName, intentData] of this.intentClassifier) {
            for (const pattern of intentData.patterns) {
                if (pattern.test(normalizedMessage)) {
                    if (intentData.confidence > bestMatch.confidence) {
                        bestMatch = {
                            name: intentName,
                            confidence: intentData.confidence
                        };
                    }
                }
            }
        }

        return bestMatch;
    }

    /**
     * ANALIZAR CONTEXTO DEL MENSAJE
     */
    analyzeContext(message, context) {
        const normalizedMessage = message.toLowerCase();
        const modifiers = [];
        const contextElements = [];

        // Buscar patrones de contexto
        for (const [patternName, patternData] of this.contextPatterns) {
            for (const keyword of patternData.keywords) {
                if (normalizedMessage.includes(keyword)) {
                    modifiers.push(patternData.modifier);
                    break;
                }
            }
        }

        // Analizar contexto proporcionado
        if (context) {
            contextElements.push({
                userType: context.userType || 'visitante',
                currentPage: context.currentPage || 'sitio_web',
                sessionId: context.sessionId || 'nueva_sesion'
            });
        }

        return {
            modifiers: modifiers,
            elements: contextElements,
            messageLength: message.length,
            complexity: this.assessComplexity(message)
        };
    }

    /**
     * BUSCAR EN BASE DE CONOCIMIENTO
     */
    searchKnowledgeBase(message) {
        const normalizedMessage = message.toLowerCase();
        let bestMatch = null;
        let bestScore = 0;

        for (const [topic, topicData] of this.knowledgeBase) {
            let score = 0;

            // Calcular score basado en keywords encontradas
            for (const keyword of topicData.keywords) {
                if (normalizedMessage.includes(keyword)) {
                    score += 1;
                }
            }

            // Normalizar score por cantidad de keywords
            const normalizedScore = score / topicData.keywords.length;

            if (normalizedScore > bestScore && normalizedScore > 0.3) {
                bestScore = normalizedScore;
                bestMatch = {
                    topic: topic,
                    data: topicData,
                    score: normalizedScore,
                    source: 'knowledge_base'
                };
            }
        }

        return bestMatch;
    }

    /**
     * GENERAR RESPUESTA
     */
    generateResponse(intent, knowledgeMatch, contextAnalysis, originalMessage) {
        let response = '';

        // 1. Responder seg√∫n intenci√≥n identificada
        if (intent.name === 'saludo') {
            response = this.getRandomTemplate('saludo');
        } else if (intent.name === 'despedida') {
            response = this.getRandomTemplate('despedida');
        } else if (intent.name === 'ayuda') {
            response = this.getRandomTemplate('ayuda_general');
        } else if (knowledgeMatch && knowledgeMatch.score > 0.5) {
            // Usar conocimiento espec√≠fico encontrado
            response = this.getRandomResponse(knowledgeMatch.data.responses);

            // Agregar contexto adicional si es relevante
            if (contextAnalysis.modifiers.includes('urgencia')) {
                response += '\n\n‚ö° *Para atenci√≥n inmediata, puedes visitarnos directamente o llamar a nuestras oficinas.*';
            }

            if (contextAnalysis.modifiers.includes('planificacion')) {
                response += '\n\nüìÖ *Te recomendamos planificar con tiempo y revisar nuestras fechas importantes.*';
            }
        } else {
            // Respuesta gen√©rica cuando no hay match claro
            response = this.getRandomTemplate('no_entendido');
            response += '\n\n' + this.getRandomTemplate('ayuda_general');
        }

        // 2. Personalizar respuesta seg√∫n contexto
        response = this.personalizeResponse(response, contextAnalysis);

        return response;
    }

    /**
     * PERSONALIZAR RESPUESTA
     */
    personalizeResponse(response, contextAnalysis) {
        let personalizedResponse = response;

        // Agregar elementos contextuales
        if (contextAnalysis.modifiers.includes('satisfaccion')) {
            personalizedResponse += '\n\nüòä *¬°Me alegra poder ayudarte!*';
        }

        if (contextAnalysis.modifiers.includes('preocupacion')) {
            personalizedResponse += '\n\nüí≠ *No te preocupes, estamos aqu√≠ para apoyarte en todo el proceso.*';
        }

        // Agregar informaci√≥n de contacto si es relevante
        if (personalizedResponse.includes('contacto') || personalizedResponse.includes('m√°s informaci√≥n')) {
            personalizedResponse += '\n\nüìû *¬øNecesitas hablar directamente con nosotros? Agenda una cita o vis√≠tanos.*';
        }

        return personalizedResponse;
    }

    /**
     * CALCULAR CONFIANZA DE LA RESPUESTA
     */
    calculateConfidence(intent, knowledgeMatch, contextAnalysis) {
        let confidence = 0.3; // Base m√≠nima

        // Sumar confianza por intenci√≥n
        confidence += intent.confidence * 0.4;

        // Sumar confianza por match de conocimiento
        if (knowledgeMatch) {
            confidence += knowledgeMatch.score * 0.4;
        }

        // Sumar confianza por contexto
        confidence += Math.min(contextAnalysis.modifiers.length * 0.1, 0.2);

        return Math.min(confidence, 0.95); // M√°ximo 95%
    }

    /**
     * EVALUAR COMPLEJIDAD DEL MENSAJE
     */
    assessComplexity(message) {
        const words = message.split(/\s+/).length;
        const questions = (message.match(/\?/g) || []).length;
        const complexity = words + (questions * 2);

        if (complexity < 5) return 'simple';
        if (complexity < 15) return 'media';
        return 'compleja';
    }

    /**
     * OBTENER PLANTILLA ALEATORIA
     */
    getRandomTemplate(templateType) {
        const templates = this.responseTemplates.get(templateType) || ['Informaci√≥n no disponible.'];
        return templates[Math.floor(Math.random() * templates.length)];
    }

    /**
     * OBTENER RESPUESTA ALEATORIA
     */
    getRandomResponse(responses) {
        return responses[Math.floor(Math.random() * responses.length)];
    }

    /**
     * GENERAR RESPUESTA DE ERROR
     */
    generateErrorResponse(message) {
        return {
            text: 'Lo siento, tuve un problema procesando tu mensaje. Por favor, intenta reformular tu pregunta.',
            confidence: 0.1,
            intent: 'error',
            processingTime: 0,
            contextModifiers: [],
            knowledgeSource: 'error_fallback',
            isLocal: true,
            error: true
        };
    }

    /**
     * OBTENER ESTAD√çSTICAS DEL PROCESADOR
     */
    getStats() {
        return {
            knowledgeBaseSize: this.knowledgeBase.size,
            responseTemplates: this.responseTemplates.size,
            intentClassifier: this.intentClassifier.size,
            contextPatterns: this.contextPatterns.size,
            version: '3.0.0',
            lastUpdate: new Date().toISOString()
        };
    }

    /**
     * AGREGAR NUEVO CONOCIMIENTO
     */
    addKnowledge(topic, data) {
        this.knowledgeBase.set(topic, data);
        console.log(`üìö Nuevo conocimiento agregado: ${topic}`);
    }

    /**
     * ACTUALIZAR PLANTILLA DE RESPUESTA
     */
    updateTemplate(templateType, responses) {
        this.responseTemplates.set(templateType, responses);
        console.log(`üìù Plantilla actualizada: ${templateType}`);
    }
}

// Singleton
let localIAProcessorInstance = null;

function getLocalIAProcessor() {
    if (!localIAProcessorInstance) {
        localIAProcessorInstance = new LocalIAProcessor();
    }
    return localIAProcessorInstance;
}

module.exports = {
    LocalIAProcessor,
    getLocalIAProcessor
};