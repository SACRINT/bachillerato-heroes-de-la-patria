name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de testing y linting
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Type check
        run: npm run type-check

      - name: ✅ Lint
        run: npm run lint

      - name: 🧪 Run tests
        run: npm run test

  # Job de build y deploy
  build-and-deploy:
    name: 🏗️ Build & Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build Astro site
        run: npm run build

      - name: 📊 Analyze bundle size
        run: npm run analyze

      - name: 🔍 Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: 📄 Setup Pages
        uses: actions/configure-pages@v4

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './apps/web/dist'

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

      - name: 📱 Update PWA manifest
        run: |
          echo "PWA deployed successfully" 
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"

  # Job de notificaciones y métricas
  post-deploy:
    name: 📈 Post Deploy Tasks
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📊 Performance metrics
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "📍 Site URL: https://sacrint.github.io/03-BachilleratoHeroesWeb/"
          echo "⚡ Performance optimizations active"
          echo "🖼️ Image optimization enabled"
          echo "🚄 Service Worker configured"
          echo "📱 PWA features active"

      - name: 💬 Slack notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: '🏫 Bachillerato Héroes de la Patria website deployment: ${{ job.status }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}