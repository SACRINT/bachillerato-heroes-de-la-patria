---
export interface Props {
  variant?: 'default' | 'elevated' | 'glass' | 'outlined';
  padding?: 'sm' | 'md' | 'lg' | 'none';
  rounded?: 'sm' | 'md' | 'lg' | 'xl' | '2xl';
  shadow?: boolean;
  hover?: boolean;
  class?: string;
  'data-testid'?: string;
}

const {
  variant = 'default',
  padding = 'md',
  rounded = 'lg',
  shadow = true,
  hover = false,
  class: className = '',
  'data-testid': testId,
  ...rest
} = Astro.props;

// Base classes
const baseClasses = [
  'relative',
  'transition-all',
  'duration-200'
];

// Variant classes
const variantClasses = {
  default: [
    'bg-white',
    'dark:bg-gray-800',
    'border',
    'border-gray-200',
    'dark:border-gray-700'
  ],
  elevated: [
    'bg-white',
    'dark:bg-gray-800',
    shadow ? 'shadow-lg' : ''
  ].filter(Boolean),
  glass: [
    'bg-white/70',
    'dark:bg-gray-800/70',
    'backdrop-blur-md',
    'border',
    'border-white/20',
    'dark:border-gray-700/20'
  ],
  outlined: [
    'bg-transparent',
    'border-2',
    'border-gray-200',
    'dark:border-gray-700'
  ]
};

// Padding classes
const paddingClasses = {
  none: [],
  sm: ['p-4'],
  md: ['p-6'],
  lg: ['p-8']
};

// Rounded classes
const roundedClasses = {
  sm: ['rounded-sm'],
  md: ['rounded-md'],
  lg: ['rounded-lg'],
  xl: ['rounded-xl'],
  '2xl': ['rounded-2xl']
};

// Hover classes
const hoverClasses = hover ? [
  'hover:scale-105',
  'hover:shadow-xl',
  'cursor-pointer'
] : [];

const classes = [
  ...baseClasses,
  ...variantClasses[variant],
  ...paddingClasses[padding],
  ...roundedClasses[rounded],
  ...hoverClasses,
  className
].join(' ');
---

<div 
  class={classes}
  data-testid={testId}
  {...rest}
>
  {Astro.slots.header && (
    <div class="mb-4 pb-4 border-b border-gray-200 dark:border-gray-700">
      <slot name="header" />
    </div>
  )}
  
  {Astro.slots.title && (
    <div class="mb-4">
      <slot name="title" />
    </div>
  )}
  
  <div>
    <slot />
  </div>
  
  {Astro.slots.footer && (
    <div class="mt-4 pt-4 border-t border-gray-200 dark:border-gray-700">
      <slot name="footer" />
    </div>
  )}
  
  {Astro.slots.actions && (
    <div class="mt-6 flex flex-wrap gap-3 justify-end">
      <slot name="actions" />
    </div>
  )}
</div>

<style>
  /* Card animations */
  .card-hover {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .card-hover:hover {
    transform: translateY(-2px);
  }
  
  /* Glass morphism effect enhancement */
  .glass-card {
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
  }
  
  /* Support for backdrop-filter fallback */
  @supports not (backdrop-filter: blur(16px)) {
    .glass-card {
      background: rgba(255, 255, 255, 0.85);
    }
    
    .dark .glass-card {
      background: rgba(31, 41, 55, 0.85);
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 640px) {
    .card-responsive {
      margin: 0.5rem;
      border-radius: 0.5rem;
    }
  }
</style>