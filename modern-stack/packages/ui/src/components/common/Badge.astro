---
export interface Props {
  variant?: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'info';
  size?: 'sm' | 'md' | 'lg';
  rounded?: boolean;
  outline?: boolean;
  removable?: boolean;
  class?: string;
  'data-testid'?: string;
}

const {
  variant = 'default',
  size = 'md',
  rounded = false,
  outline = false,
  removable = false,
  class: className = '',
  'data-testid': testId,
  ...rest
} = Astro.props;

// Base classes
const baseClasses = [
  'inline-flex',
  'items-center',
  'justify-center',
  'font-medium',
  'transition-all',
  'duration-200'
];

// Variant classes
const variantClasses = {
  default: outline 
    ? ['border', 'border-gray-300', 'text-gray-700', 'bg-transparent', 'hover:bg-gray-50']
    : ['bg-gray-100', 'text-gray-800', 'hover:bg-gray-200'],
  primary: outline
    ? ['border', 'border-blue-300', 'text-blue-700', 'bg-transparent', 'hover:bg-blue-50']
    : ['bg-blue-100', 'text-blue-800', 'hover:bg-blue-200'],
  secondary: outline
    ? ['border', 'border-yellow-300', 'text-yellow-700', 'bg-transparent', 'hover:bg-yellow-50']
    : ['bg-yellow-100', 'text-yellow-800', 'hover:bg-yellow-200'],
  success: outline
    ? ['border', 'border-green-300', 'text-green-700', 'bg-transparent', 'hover:bg-green-50']
    : ['bg-green-100', 'text-green-800', 'hover:bg-green-200'],
  warning: outline
    ? ['border', 'border-orange-300', 'text-orange-700', 'bg-transparent', 'hover:bg-orange-50']
    : ['bg-orange-100', 'text-orange-800', 'hover:bg-orange-200'],
  danger: outline
    ? ['border', 'border-red-300', 'text-red-700', 'bg-transparent', 'hover:bg-red-50']
    : ['bg-red-100', 'text-red-800', 'hover:bg-red-200'],
  info: outline
    ? ['border', 'border-cyan-300', 'text-cyan-700', 'bg-transparent', 'hover:bg-cyan-50']
    : ['bg-cyan-100', 'text-cyan-800', 'hover:bg-cyan-200']
};

// Size classes
const sizeClasses = {
  sm: ['px-2', 'py-1', 'text-xs', 'gap-1'],
  md: ['px-2.5', 'py-1.5', 'text-sm', 'gap-1.5'],
  lg: ['px-3', 'py-2', 'text-base', 'gap-2']
};

// Rounded classes
const roundedClasses = rounded 
  ? ['rounded-full'] 
  : size === 'sm' 
    ? ['rounded'] 
    : ['rounded-md'];

const classes = [
  ...baseClasses,
  ...variantClasses[variant],
  ...sizeClasses[size],
  ...roundedClasses,
  className
].join(' ');

// Remove button classes
const removeButtonClasses = [
  'ml-1',
  'flex-shrink-0',
  'h-4',
  'w-4',
  'rounded-full',
  'inline-flex',
  'items-center',
  'justify-center',
  'hover:bg-black/10',
  'focus:outline-none',
  'focus:ring-2',
  'focus:ring-offset-1',
  'focus:ring-blue-500',
  'transition-colors',
  'duration-150'
].join(' ');
---

<span 
  class={classes}
  data-testid={testId}
  {...rest}
>
  {Astro.slots.icon && (
    <span class="flex-shrink-0">
      <slot name="icon" />
    </span>
  )}
  
  <span class="flex-1 truncate">
    <slot />
  </span>
  
  {removable && (
    <button
      type="button"
      class={removeButtonClasses}
      onclick="this.parentElement.remove()"
      aria-label="Eliminar"
    >
      <i class="fas fa-times text-xs" aria-hidden="true"></i>
    </button>
  )}
</span>

<style>
  /* Badge animations */
  .badge {
    transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .badge:hover {
    transform: translateY(-1px);
  }
  
  /* Pulse animation for new badges */
  .badge-new {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .8;
    }
  }
  
  /* Remove button hover effect */
  .badge button:hover {
    background-color: rgba(0, 0, 0, 0.1);
    transform: scale(1.1);
  }
  
  /* Dark mode adjustments */
  .dark .badge {
    color: inherit;
  }
  
  .dark .badge-default {
    background-color: rgba(55, 65, 81, 0.8);
    color: #f3f4f6;
  }
  
  .dark .badge-primary {
    background-color: rgba(59, 130, 246, 0.2);
    color: #93c5fd;
  }
  
  .dark .badge-success {
    background-color: rgba(34, 197, 94, 0.2);
    color: #86efac;
  }
  
  .dark .badge-warning {
    background-color: rgba(251, 146, 60, 0.2);
    color: #fed7aa;
  }
  
  .dark .badge-danger {
    background-color: rgba(239, 68, 68, 0.2);
    color: #fca5a5;
  }
  
  .dark .badge-info {
    background-color: rgba(6, 182, 212, 0.2);
    color: #67e8f9;
  }
</style>