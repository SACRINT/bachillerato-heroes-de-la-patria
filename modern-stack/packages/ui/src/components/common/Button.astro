---
import { themeConfig } from '@heroes-patria/config';

export interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger';
  size?: 'sm' | 'md' | 'lg';
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  loading?: boolean;
  href?: string;
  target?: '_blank' | '_self' | '_parent' | '_top';
  class?: string;
  'data-testid'?: string;
}

const {
  variant = 'primary',
  size = 'md',
  type = 'button',
  disabled = false,
  loading = false,
  href,
  target,
  class: className = '',
  'data-testid': testId,
  ...rest
} = Astro.props;

// Base classes
const baseClasses = [
  'inline-flex',
  'items-center',
  'justify-center',
  'font-medium',
  'rounded-lg',
  'transition-all',
  'duration-200',
  'focus:outline-none',
  'focus:ring-2',
  'focus:ring-offset-2',
  'disabled:opacity-50',
  'disabled:cursor-not-allowed',
  'disabled:pointer-events-none'
];

// Variant classes
const variantClasses = {
  primary: [
    'bg-blue-600',
    'text-white',
    'hover:bg-blue-700',
    'focus:ring-blue-500',
    'shadow-sm',
    'hover:shadow-md'
  ],
  secondary: [
    'bg-yellow-500',
    'text-white',
    'hover:bg-yellow-600',
    'focus:ring-yellow-500',
    'shadow-sm',
    'hover:shadow-md'
  ],
  outline: [
    'border-2',
    'border-blue-600',
    'text-blue-600',
    'bg-transparent',
    'hover:bg-blue-600',
    'hover:text-white',
    'focus:ring-blue-500'
  ],
  ghost: [
    'text-gray-600',
    'dark:text-gray-300',
    'hover:bg-gray-100',
    'dark:hover:bg-gray-800',
    'focus:ring-gray-500'
  ],
  danger: [
    'bg-red-600',
    'text-white',
    'hover:bg-red-700',
    'focus:ring-red-500',
    'shadow-sm',
    'hover:shadow-md'
  ]
};

// Size classes
const sizeClasses = {
  sm: ['px-3', 'py-1.5', 'text-sm', 'h-8'],
  md: ['px-4', 'py-2', 'text-sm', 'h-10'],
  lg: ['px-6', 'py-3', 'text-base', 'h-12']
};

const classes = [
  ...baseClasses,
  ...variantClasses[variant],
  ...sizeClasses[size],
  className
].join(' ');

const Component = href ? 'a' : 'button';
const componentProps = href 
  ? { href, target, rel: target === '_blank' ? 'noopener noreferrer' : undefined }
  : { type, disabled: disabled || loading };
---

<Component 
  class={classes}
  data-testid={testId}
  {...componentProps}
  {...rest}
>
  {loading && (
    <svg 
      class="animate-spin -ml-1 mr-3 h-4 w-4" 
      xmlns="http://www.w3.org/2000/svg" 
      fill="none" 
      viewBox="0 0 24 24"
    >
      <circle 
        class="opacity-25" 
        cx="12" 
        cy="12" 
        r="10" 
        stroke="currentColor" 
        stroke-width="4"
      />
      <path 
        class="opacity-75" 
        fill="currentColor" 
        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
      />
    </svg>
  )}
  
  <slot />
  
  {Astro.slots.icon && (
    <span class="ml-2">
      <slot name="icon" />
    </span>
  )}
</Component>

<style>
  /* Custom button animations */
  button, a {
    position: relative;
    overflow: hidden;
  }
  
  button:not(:disabled):active,
  a:active {
    transform: translateY(1px);
  }
  
  /* Ripple effect on click */
  button:not(:disabled)::after,
  a::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 0.3s, height 0.3s;
    pointer-events: none;
  }
  
  button:not(:disabled):active::after,
  a:active::after {
    width: 200px;
    height: 200px;
  }
</style>