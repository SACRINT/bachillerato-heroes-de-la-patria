---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { siteConfig } from '@heroes-patria/config';

export interface Props {
  title: string;
  description?: string;
  keywords?: string[];
  ogImage?: string;
  canonical?: string;
  showHeader?: boolean;
  showFooter?: boolean;
}

const { 
  title, 
  description = siteConfig.seo.defaultDescription,
  keywords = siteConfig.seo.keywords,
  ogImage = '/images/og-default.jpg',
  canonical,
  showHeader = true,
  showFooter = true
} = Astro.props;

const canonicalURL = canonical || new URL(Astro.url.pathname, Astro.site);
const fullTitle = title.includes(siteConfig.name) 
  ? title 
  : `${title} | ${siteConfig.name}`;
---

<!DOCTYPE html>
<html lang="es" class="h-full">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  
  <!-- SEO Meta Tags -->
  <title>{fullTitle}</title>
  <meta name="description" content={description} />
  {keywords && <meta name="keywords" content={keywords.join(', ')} />}
  <link rel="canonical" href={canonicalURL} />
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={siteConfig.seo.type} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={fullTitle} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(ogImage, Astro.site)} />
  <meta property="og:locale" content={siteConfig.seo.locale} />
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={fullTitle} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={new URL(ogImage, Astro.site)} />
  
  <!-- Preconnect for performance -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="preconnect" href="https://cdnjs.cloudflare.com">
  
  <!-- FontAwesome -->
  <link 
    rel="stylesheet" 
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" 
    integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" 
    crossorigin="anonymous" 
    referrerpolicy="no-referrer"
  >
  
  <!-- Google Fonts -->
  <link 
    href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" 
    rel="stylesheet"
  >
  
  <!-- Theme color -->
  <meta name="theme-color" content={siteConfig.pwa.themeColor} />
  
  <!-- PWA manifest -->
  <link rel="manifest" href="/manifest.json" />
  
  <!-- Institutional information -->
  <meta name="author" content={siteConfig.name} />
  <meta name="copyright" content={`Â© ${new Date().getFullYear()} ${siteConfig.name}`} />
  
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "EducationalOrganization",
    "name": siteConfig.name,
    "alternateName": siteConfig.shortName,
    "description": siteConfig.description,
    "url": siteConfig.url,
    "logo": `${siteConfig.url}/images/logo.png`,
    "address": {
      "@type": "PostalAddress",
      "streetAddress": siteConfig.contact.address.street,
      "addressLocality": siteConfig.contact.address.city,
      "addressRegion": siteConfig.contact.address.state,
      "postalCode": siteConfig.contact.address.zipCode,
      "addressCountry": siteConfig.contact.address.country
    },
    "contactPoint": {
      "@type": "ContactPoint",
      "telephone": siteConfig.contact.phone,
      "email": siteConfig.contact.email,
      "contactType": "customer service"
    },
    "sameAs": [
      siteConfig.social.facebook,
      siteConfig.social.instagram,
      siteConfig.social.youtube
    ]
  })} />
  
  <!-- Critical CSS will be inlined by Astro -->
</head>
<body class="h-full bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300">
  <!-- Skip link for accessibility -->
  <a 
    href="#main-content" 
    class="sr-only focus:not-sr-only focus:fixed focus:top-2 focus:left-2 bg-blue-600 text-white px-4 py-2 rounded-md z-50"
  >
    Saltar al contenido principal
  </a>
  
  <div class="min-h-full flex flex-col">
    {showHeader && <Header />}
    
    <main 
      id="main-content" 
      class={showHeader ? "flex-1 pt-16 lg:pt-20" : "flex-1"}
    >
      <slot />
    </main>
    
    {showFooter && <Footer />}
  </div>

  <!-- Theme toggle script (inline for performance) -->
  <script is:inline>
    // Dark mode initialization using config
    const STORAGE_KEY = 'theme';
    
    const theme = (() => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem(STORAGE_KEY)) {
        return localStorage.getItem(STORAGE_KEY);
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      return 'light';
    })();

    if (theme === 'light') {
      document.documentElement.classList.remove('dark');
    } else {
      document.documentElement.classList.add('dark');
    }

    window.localStorage.setItem(STORAGE_KEY, theme);
  </script>

  <!-- Service Worker for PWA -->
  <script is:inline>
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('/sw.js')
        .then(registration => {
          console.log('SW registered: ', registration);
        })
        .catch(registrationError => {
          console.log('SW registration failed: ', registrationError);
        });
    }
  </script>

  <!-- Analytics (placeholder) -->
  {siteConfig.development.enableAnalytics && (
    <script>
      // TODO: Add analytics tracking code here
      console.log('Analytics would be loaded here in production');
    </script>
  )}
</body>
</html>

<style>
  /* Critical CSS - will be inlined */
  html {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    scroll-behavior: smooth;
  }
  
  body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  /* Focus styles for accessibility */
  *:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
    
    html {
      scroll-behavior: auto;
    }
  }

  /* Print styles */
  @media print {
    header,
    footer,
    nav,
    .no-print {
      display: none !important;
    }
    
    main {
      padding-top: 0 !important;
    }
    
    * {
      color: black !important;
      background: white !important;
    }
  }
</style>